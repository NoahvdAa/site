{"componentChunkName":"component---src-templates-wiki-js","path":"/wiki/developers/porting-from-velocity-1/","result":{"data":{"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"title\": \"Porting Your Plugin from Velocity 1.x.x\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Velocity 3.0.0 includes important API changes from the Velocity 1.x.x series. `, mdx(\"strong\", {\n    parentName: \"p\"\n  }, `Please read this document very carefully`), `.`), mdx(\"h2\", null, `Minimum supported Java version bump`), mdx(\"p\", null, `Velocity 3.0.0 now requires Java 11 and above. The Velocity API is compiled for Java 8 for the convenience of plugins that want to run on older versions of Java, but we may decide to bump this in a future major release.`), mdx(\"h2\", null, `Removal of legacy dependencies`), mdx(\"p\", null, `We removed all support for the old `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `text`), ` 3 library. For `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `text`), ` 3.x.x (and all the APIs that depend on it), direct equivalents are available in `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.adventure.kyori.net/\"\n  }, `Adventure`), ` which was introduced in Velocity 1.1.0.`), mdx(\"p\", null, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `toml4j`), `, deprecated in Velocity 1.1.0 (as it is no longer maintained), has not been removed to provide more time for plugins to migrate to Configurate 3. However, you should prepare to either switch to Configurate 3 or shade toml4j into your plugin directly.`), mdx(\"h2\", null, `New asynchronous event system`), mdx(\"p\", null, `Velocity 3.0.0 contains a backport of Velocity Polymer's event system, which differs from Velocity 1.x.x's event system in a number of ways. Velocity 1.x.x's event model forced all events to be executed asynchronously on a fixed-size thread pool, which has proven over time to be a flawed model.`), mdx(\"p\", null, `Existing event handlers will continue to work unmodified on Velocity 3.0.0, as all event handlers are assumed to be asynchronous blocking handlers by default. However, there are some new APIs introduced for handling continuations - see the `, mdx(Link, {\n    to: \"/wiki/developers/event-api/\",\n    mdxType: \"Link\"\n  }, `event API page`), ` for more information. However, you are encouraged to migrate your event listeners to the new event API paradigms.`));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Porting Your Plugin from Velocity 1.x.x"},"excerpt":"Velocity 3.0.0 includes important API changes from the Velocity 1.x.x series.  Please read this document very carefully . Minimum supportedâ€¦"}},"pageContext":{"slug":"/developers/porting-from-velocity-1/"}},"staticQueryHashes":["63159454"]}