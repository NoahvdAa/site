{"componentChunkName":"component---src-templates-wiki-js","path":"/wiki/developers/command-api/","result":{"data":{"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"title\": \"The Command API\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `The Command API lets you create commands that can be executed by a player connected to the proxy or the console.`), mdx(\"h2\", null, `Creating a command`), mdx(\"p\", null, `Each command class needs to implement a `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `Command`), ` subinterface. The choice depends on the type of arguments and the granularity of suggestions provided to the client. These include:`), mdx(\"h3\", null, mdx(\"code\", {\n    parentName: \"h3\",\n    \"className\": \"language-text\"\n  }, `BrigadierCommand`)), mdx(\"p\", null, `Internally, Velocity uses the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Mojang/brigadier\"\n  }, `Brigadier`), ` library to register and dispatch command actions. You can register your own `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `CommandNode`), `s by wrapping them in a `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `BrigadierCommand`), `. Let's see an example of a command that will tell whoever executes the command \"Hello World\" in light blue text.`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `package`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `example`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocityplugin`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `mojang`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `brigadier`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `builder`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `LiteralArgumentBuilder`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `mojang`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `brigadier`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `tree`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `LiteralCommandNode`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `command`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `BrigadierCommand`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `command`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `CommandSource`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `event`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Subscribe`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `event`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `proxy`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `ProxyInitializeEvent`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `plugin`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Plugin`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `net`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `kyori`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `adventure`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `text`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Component`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `net`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `kyori`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `adventure`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `text`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `format`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `NamedTextColor`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Plugin`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `id `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"helloworld\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `class`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `HelloWorldPlugin`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `void`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `createBrigadierCommand`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `LiteralCommandNode`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token generics\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `<`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name\"\n  }, `CommandSource`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `>`)), ` helloNode `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `LiteralArgumentBuilder`), `\n            `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token generics\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `<`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name\"\n  }, `CommandSource`), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `>`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `literal`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"test\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n            `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `executes`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `context `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `->`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n                `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Component`), ` message `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Component`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `text`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"Hello World\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `NamedTextColor`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `AQUA`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n                context`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `getSource`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `sendMessage`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `message`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n                `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `return`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, `1`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `// indicates success`), `\n            `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n            `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `build`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `// BrigadierCommand implements Command`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `BrigadierCommand`), ` command `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `new`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `BrigadierCommand`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `helloNode`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"p\", null, `Brigadier commands have full backwards-compatibility with 1.12.2 and lower versions.`), mdx(\"p\", null, `Custom plugin command argument types are not supported in Velocity, as they would require the client to also support\nthem. We recommend sticking to the predefined Brigadier types provided.`), mdx(\"h3\", null, mdx(\"code\", {\n    parentName: \"h3\",\n    \"className\": \"language-text\"\n  }, `SimpleCommand`)), mdx(\"p\", null, `Modelled after the convention popularized by Bukkit and BungeeCord, a `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `SimpleCommand`), ` has three methods: one for when the command is executed, one to provide suggestions for tab completion, and one to check a `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `CommandSource`), ` has permission to use the command. All methods receive a `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `SimpleCommand.Invocation`), ` object, which contains the `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `CommandSource`), ` that executed the command and the arguments as an array of strings. The previous example can also be implemented using this interface:`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `package`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `example`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocityplugin`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `command`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `CommandSource`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `command`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `SimpleCommand`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `net`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `kyori`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `adventure`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `text`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Component`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `net`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `kyori`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `adventure`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `text`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `format`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `NamedTextColor`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `class`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `TestCommand`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `implements`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `SimpleCommand`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Override`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `void`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `execute`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Invocation`), ` invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `CommandSource`), ` source `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `source`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `// Get the arguments after the command alias`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `String`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `[`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `]`), ` args `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `arguments`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n        source`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `sendMessage`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Component`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `text`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"Hello World!\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `color`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `NamedTextColor`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `AQUA`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), `\n    \n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Override`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `boolean`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `hasPermission`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Invocation`), ` invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `return`), ` invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `source`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `hasPermission`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"command.test\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `    \n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"p\", null, `It's important to note `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `invocation.arguments()`), ` doesn't include the command alias (e.g. `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `teleport`), ` for `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `/teleport foo bar`), `). In the event that no arguments are specified, an empty array will be passed, rather than a null array.`), mdx(\"p\", null, `If a player or the console executes the following command: `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `/stats Player2 kills`), `, the first argument will be `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `Player2`), `, which we can access using `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `invocation.arguments()[0]`), ` and the second argument will be `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `kills`), `.`), mdx(\"h3\", null, mdx(\"code\", {\n    parentName: \"h3\",\n    \"className\": \"language-text\"\n  }, `RawCommand`)), mdx(\"p\", null, `There's certain cases where you don't need to process the arguments. These may include:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `A `, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, `/say`), ` style command, where the arguments contain the message as a string; or`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `You're using an external command framework to process your commands.`)), mdx(\"p\", null, `A raw command indicates the proxy to pass the command alias and its arguments directly without further processing. Let's see an example of a command that echoes the received input:`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `package`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `example`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocityplugin`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `command`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `RawCommand`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `net`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `kyori`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `adventure`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `text`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Component`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `class`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `EchoCommand`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `implements`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `RawCommand`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Override`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `void`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `execute`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Invocation`), ` invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n        invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `source`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `sendMessage`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Component`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `text`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `arguments`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), `\n    \n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Override`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `boolean`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `hasPermission`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Invocation`), ` invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `return`), ` invocation`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `source`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `hasPermission`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"command.echo\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `    \n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"h2\", null, `Registering a command`), mdx(\"p\", null, `Now that we have created a command, we need to register it in order for it to work. To register commands, you use the Command Manager. We get the command manager by executing `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `proxyServer.getCommandManager()`), ` with the proxy instance, or by injecting it using the `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `@Inject`), ` annotation in the main class. The register method requires two parameters, the command metadata and the command object.`), mdx(\"p\", null, `The `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `CommandMeta`), ` contains the case-insensitive aliases and more advanced features. The Command Manager provides a meta builder via the `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `#metaBuilder(String alias)`), ` method.`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `CommandMeta`), ` meta `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` commandManager`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `metaBuilder`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"test\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `// Specify other aliases (optional)`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `aliases`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"otherAlias\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"anotherAlias\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `build`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`)))), mdx(\"p\", null, `Finally,`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, `commandManager`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `register`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `meta`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `new`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `TestCommand`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`)))), mdx(\"p\", null, `If you're registering a `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `BrigadierCommand`), `, you may prefer to use the `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `#register(BrigadierCommand)`), ` method or `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `#metaBuilder(BrigadierCommand)`), ` to specify additional aliases.`));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"The Command API"},"excerpt":"The Command API lets you create commands that can be executed by a player connected to the proxy or the console. Creating a command Each…"}},"pageContext":{"slug":"/developers/command-api/"}},"staticQueryHashes":["63159454"]}