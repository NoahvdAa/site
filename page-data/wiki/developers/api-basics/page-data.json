{"componentChunkName":"component---src-templates-wiki-js","path":"/wiki/developers/api-basics/","result":{"data":{"mdx":{"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"title\": \"Velocity Plugin Basics\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Now we will lay the groundwork for your first plugin. We will cover how to create your very first Velocity plugin.`), mdx(\"h2\", null, `Create the plugin class`), mdx(\"p\", null, `Create a new class (let's say `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `com.example.velocityplugin.VelocityTest`), `) and paste this in:`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `package`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `example`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocityplugin`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `google`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `inject`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Inject`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `plugin`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Plugin`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `com`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `velocitypowered`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `api`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `proxy`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `ProxyServer`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `import`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token namespace\"\n  }, `org`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`), `slf4j`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, `.`)), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Logger`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Plugin`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), `id `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"myfirstplugin\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` name `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"My First Plugin\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` version `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"0.1.0-SNAPSHOT\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), `\n        url `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"https://example.org\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` description `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"I did it!\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` authors `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"Me\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `class`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `VelocityTest`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `private`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `ProxyServer`), ` server`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `private`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Logger`), ` logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Inject`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `VelocityTest`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `ProxyServer`), ` server`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Logger`), ` logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `this`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `server `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` server`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n        `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `this`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `logger `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n        logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `info`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"Hello there! I made my first plugin with Velocity.\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"p\", null, `What did you just do there? There's quite a bit to unpack, so let's focus on the Velocity-specific bits:`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, `@Plugin(id = \"myfirstplugin\", name = \"My First Plugin\", version = \"0.1.0-SNAPSHOT\",\n        url = \"awesome.org\", description = \"I did it!\", authors = {\"Me\"})\npublic class VelocityTest {`))), mdx(\"p\", null, `This tells Velocity that this class contains your plugin (myfirstplugin) so that it can be loaded once the proxy starts up.\nVelocity will detect where the plugin will reside when you compile your plugin.`), mdx(\"p\", null, `Moving on, what's this?`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Inject`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `VelocityTest`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `ProxyServer`), ` server`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Logger`), ` logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `this`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `server `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` server`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `this`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `logger `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n    logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `info`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, `\"Hello there, it's a test plugin I made!\"`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"p\", null, `This looks like magic! How is Velocity doing this? The answer lies in the `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `@Inject`), `, which indicates that Velocity should\ninject a ProxyServer and the Logger when constructing your plugin. These two interfaces will help you out as you begin\nworking with Velocity. We won't talk too much about dependency injection: all you need to know is that Velocity will\ndo this.`), mdx(\"p\", null, `All you need to do is build your plugin, put it in your `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `plugins/`), ` directory, and try it! Isn't that nice? In the next\nsection you'll learn more about how to use the API.`), mdx(\"h2\", null, `Choosing `, mdx(\"code\", {\n    parentName: \"h2\",\n    \"className\": \"language-text\"\n  }, `@Plugin`), ` Information`), mdx(\"p\", null, `Choose your plugin's ID wisely. Other plugins will use this ID to depend on yours. If you change it, you could break compatibility.`), mdx(\"p\", null, `The plugin name is somewhat less important. It will be shown to users as the display name of your plugin, but tweaking it will not be catastrophic.`), mdx(\"p\", null, `For the version, we recommend sticking to semantic versioning - you can read more about this concept at `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://semver.org/\"\n  }, `semver.org`), `. Basically, use 3 numbers in your version, such as 1.4.25. Increment the major number when you make a backwards-incompatible breaking change, increment the minor number when you add functionality in a compatible manner, and increment the patch number when you fix a bug or make an otherwise unnoticeable change in the implementation.`), mdx(\"p\", null, `You can also describe your plugin's URL, authors, and description in your `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `@Plugin`), ` annotation. Plugin dependencies are also be specified there, but we'll get to that later.`), mdx(\"h3\", null, `A word of caution`), mdx(\"p\", null, `In Velocity, plugin loading is split into two steps: construction and initialization. The code in your plugin's\nconstructor is part of the construction phase. There is very little you can do safely during construction, especially as\nthe API does not specify which operations are safe to run during construction. Notably, you can't register an event\nlistener in your constructor, because you need to have a valid plugin registration, but Velocity can't register the\nplugin until the plugin has been constructed, causing a \"chicken or the egg\" problem.`), mdx(\"p\", null, `To break this vicious cycle, you should always wait for initialization, which is indicated when Velocity fires the ProxyInitializeEvent.\nWe can do things on initialization by adding a listener for this event, as shown below. Note that Velocity automatically\nregisters your plugin main class as a listener.`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Subscribe`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `void`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `onProxyInitialization`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `ProxyInitializeEvent`), ` event`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `// Do some operation demanding access to the Velocity API here.`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, `// For instance, we could register an event:`), `\n    server`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `getEventManager`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, `register`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `this`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `new`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `PluginListener`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"h2\", null, `Getting your Plugin's Directory`), mdx(\"p\", null, `At some point you may need your plugin's directory. To do this, add `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `@DataDirectory Path dataDirectory`), ` to your plugin's constructor\nparameters:`), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"java\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-java\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `private`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `final`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Path`), ` dataDirectory`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@Inject`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `public`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `VelocityTest`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `(`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `ProxyServer`), ` server`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Logger`), ` logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `,`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token annotation punctuation\"\n  }, `@DataDirectory`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, `Path`), ` dataDirectory`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `)`), ` `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `{`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `this`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `server `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` server`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `this`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `logger `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` logger`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n    `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, `this`), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `.`), `dataDirectory `, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, `=`), ` dataDirectory`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `;`), `\n`, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, `}`)))), mdx(\"p\", null, `This will get you a `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `java.nio.file.Path`), ` of your plugin directory. If you absolutely need a `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `java.io.File`), `, you may use `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `Path#toFile()`), `. However, Velocity usually works with `, mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, `Path`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Velocity Plugin Basics"},"excerpt":"Now we will lay the groundwork for your first plugin. We will cover how to create your very first Velocity plugin. Create the plugin class…"}},"pageContext":{"slug":"/developers/api-basics/"}},"staticQueryHashes":["63159454"]}